// Mocks generated by Mockito 5.3.2 from annotations
// in kanban_board/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:kanban_board/domain/entities/board.dart' as _i2;
import 'package:kanban_board/domain/entities/card.dart' as _i3;
import 'package:kanban_board/domain/entities/list.dart' as _i4;
import 'package:kanban_board/domain/repositories/board_repository.dart' as _i6;
import 'package:kanban_board/domain/repositories/card_repository.dart' as _i8;
import 'package:kanban_board/domain/repositories/list_repository.dart' as _i9;
import 'package:kanban_board/domain/repositories/profile_repository.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBoard_0 extends _i1.SmartFake implements _i2.Board {
  _FakeBoard_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCardEntity_1 extends _i1.SmartFake implements _i3.CardEntity {
  _FakeCardEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListEntity_2 extends _i1.SmartFake implements _i4.ListEntity {
  _FakeListEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_3 extends _i1.SmartFake implements _i5.User {
  _FakeUser_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BoardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBoardRepository extends _i1.Mock implements _i6.BoardRepository {
  MockBoardRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i2.Board>> getBoards() => (super.noSuchMethod(
        Invocation.method(
          #getBoards,
          [],
        ),
        returnValue: _i7.Future<List<_i2.Board>>.value(<_i2.Board>[]),
      ) as _i7.Future<List<_i2.Board>>);
  @override
  _i7.Future<_i2.Board> createBoard(String? name) => (super.noSuchMethod(
        Invocation.method(
          #createBoard,
          [name],
        ),
        returnValue: _i7.Future<_i2.Board>.value(_FakeBoard_0(
          this,
          Invocation.method(
            #createBoard,
            [name],
          ),
        )),
      ) as _i7.Future<_i2.Board>);
}

/// A class which mocks [CardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardRepository extends _i1.Mock implements _i8.CardRepository {
  MockCardRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i3.CardEntity>> getCards(String? listId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCards,
          [listId],
        ),
        returnValue: _i7.Future<List<_i3.CardEntity>>.value(<_i3.CardEntity>[]),
      ) as _i7.Future<List<_i3.CardEntity>>);
  @override
  _i7.Future<_i3.CardEntity> createCard({
    required String? title,
    required String? description,
    required String? listId,
    required int? position,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCard,
          [],
          {
            #title: title,
            #description: description,
            #listId: listId,
            #position: position,
          },
        ),
        returnValue: _i7.Future<_i3.CardEntity>.value(_FakeCardEntity_1(
          this,
          Invocation.method(
            #createCard,
            [],
            {
              #title: title,
              #description: description,
              #listId: listId,
              #position: position,
            },
          ),
        )),
      ) as _i7.Future<_i3.CardEntity>);
  @override
  _i7.Future<void> startTracking(
    String? cardId, {
    required String? startAt,
    String? endAt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startTracking,
          [cardId],
          {
            #startAt: startAt,
            #endAt: endAt,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> stopTracking(
    String? cardId, {
    required String? endAt,
    required int? totalSpent,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopTracking,
          [cardId],
          {
            #endAt: endAt,
            #totalSpent: totalSpent,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> markAsDone(
    String? cardId, {
    required String? finishedAt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsDone,
          [cardId],
          {#finishedAt: finishedAt},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> updateCard({required _i3.CardEntity? card}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCard,
          [],
          {#card: card},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [ListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockListRepository extends _i1.Mock implements _i9.ListRepository {
  MockListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i4.ListEntity>> getLists(String? boardId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLists,
          [boardId],
        ),
        returnValue: _i7.Future<List<_i4.ListEntity>>.value(<_i4.ListEntity>[]),
      ) as _i7.Future<List<_i4.ListEntity>>);
  @override
  _i7.Future<_i4.ListEntity> createList({
    required String? name,
    required String? boardId,
    required int? position,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createList,
          [],
          {
            #name: name,
            #boardId: boardId,
            #position: position,
          },
        ),
        returnValue: _i7.Future<_i4.ListEntity>.value(_FakeListEntity_2(
          this,
          Invocation.method(
            #createList,
            [],
            {
              #name: name,
              #boardId: boardId,
              #position: position,
            },
          ),
        )),
      ) as _i7.Future<_i4.ListEntity>);
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i10.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.User get userDetail => (super.noSuchMethod(
        Invocation.getter(#userDetail),
        returnValue: _FakeUser_3(
          this,
          Invocation.getter(#userDetail),
        ),
      ) as _i5.User);
  @override
  _i7.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
